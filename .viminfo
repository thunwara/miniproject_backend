# This viminfo file was generated by Vim 8.1.
# You may edit it if you're careful!

# Viminfo version
|1,4

# Value of 'encoding' when this file was written
*encoding=utf-8


# hlsearch on (H) or off (h):
~h
# Command Line History (newest to oldest):
:wq
|2,0,1644662851,,"wq"

# Search String History (newest to oldest):

# Expression History (newest to oldest):

# Input Line History (newest to oldest):

# Debug Line History (newest to oldest):

# Registers:
""1	LINE	0
	from pymongo import MongoClient
	from fastapi import FastAPI, Query
	from fastapi import HTTPException
	from typing import Optional
	from pydantic import BaseModel
	from fastapi.encoders import jsonable_encoder
	from datetime import datetime
	import time
	from fastapi.middleware.cors import CORSMiddleware
	
	
	app = FastAPI()
	
	origins = [
	    "*"
	]
	
	app.add_middleware(
	    CORSMiddleware,
	    allow_origins=origins,
	    allow_credentials=True,
	    allow_methods=["*"],
	    allow_headers=["*"],
	)
	
	myClient = MongoClient('mongodb://localhost', 27017)
	
	db = myClient["toilet"]
	collection1 = db["user1"]
	collection2 = db["user2"]
	collection3 = db["user3"]
	
	class Toilet(BaseModel):
	    room: int
	    state: int
	
	
	@app.post("/toilet")
	def update_input(toilet : Toilet):
	    x= jsonable_encoder(toilet)
	    print(toilet.room)
	    print(toilet.state)
	    if (toilet.room == 1):
	        toiletroom = collection1
	    if (toilet.room == 2):
	        toiletroom = collection2
	    if (toilet.room == 3):
	        toiletroom = collection3
	    
	    timein = time.time()
|3,1,1,1,50,0,1644662613,"from pymongo import MongoClient","from fastapi import FastAPI, Query","from fastapi import HTTPException","from typing import Optional","from pydantic import BaseModel","from fastapi.encoders import jsonable_encoder","from datetime import datetime","import time","from fastapi.middleware.cors import CORSMiddleware","","","app = FastAPI()","","origins = [","    \"*\"","]","","app.add_middleware(","    CORSMiddleware,",>28
|<"    allow_origins=origins,","    allow_credentials=True,","    allow_methods=[\"*\"],","    allow_headers=[\"*\"],",")","","myClient = MongoClient('mongodb://localhost', 27017)","","db = myClient[\"toilet\"]","collection1 = db[\"user1\"]","collection2 = db[\"user2\"]","collection3 = db[\"user3\"]","","class Toilet(BaseModel):","    room: int","    state: int","","","@app.post(\"/toilet\")","def update_input(toilet : Toilet):","    x= jsonable_encoder(toilet)","    print(toilet.room)",>25
|<"    print(toilet.state)","    if (toilet.room == 1):","        toiletroom = collection1","    if (toilet.room == 2):","        toiletroom = collection2","    if (toilet.room == 3):","        toiletroom = collection3","    ","    timein = time.time()"
"2	LINE	0
	from pymongo import MongoClient
	from fastapi import FastAPI, Query
	from fastapi import HTTPException
	from typing import Optional
	from pydantic import BaseModel
	from fastapi.encoders import jsonable_encoder
	from datetime import datetime
	import time
	
	
	app = FastAPI()
	
	myClient = MongoClient('mongodb://localhost', 27017)
	
	db = myClient["toilet"]
	collection1 = db["user1"]
	collection2 = db["user2"]
	collection3 = db["user3"]
	
	class Toilet(BaseModel):
	    room: int
	    state: int
	
	
	@app.post("/toilet")
	def update_input(toilet : Toilet):
	    x= jsonable_encoder(toilet)
	    print(toilet.room)
	    print(toilet.state)
	    if (toilet.room == 1):
	        toiletroom = collection1
	    if (toilet.room == 2):
	        toiletroom = collection2
	    if (toilet.room == 3):
	        toiletroom = collection3
	    
	    timein = time.time()
	
	    if (toilet.state == 1):
	        fromdatabase = toiletroom.find_one({"room" : toilet.room},{"_id":0})
	        print(timein)
	        query = {"room": toilet.room , "state": toilet.state, "timein": timein ,"timeall" : fromdatabase["timeall"] , "people": fromdatabase["people"]} 
	        filter = {"room":toilet.room}
	        newvalue = {"$set": query}
	        toiletroom.update_one(filter,newvalue)
	    elif (toilet.state == 0):
	        fromdatabase = toiletroom.find_one({"room" : toilet.room},{"_id":0})
	        print(fromdatabase["timeall"])
	        query = {"room": toilet.room , "state": toilet.state, "timein": timein ,"timeall" : fromdatabase["timeall"] + timein - fromdatabase["timein"]  , "people": fromdatabase["people"]+1} 
	        filter = {"room":toilet.room}
|3,0,2,1,50,0,1644662515,"from pymongo import MongoClient","from fastapi import FastAPI, Query","from fastapi import HTTPException","from typing import Optional","from pydantic import BaseModel","from fastapi.encoders import jsonable_encoder","from datetime import datetime","import time","","","app = FastAPI()","","myClient = MongoClient('mongodb://localhost', 27017)","","db = myClient[\"toilet\"]","collection1 = db[\"user1\"]","collection2 = db[\"user2\"]",>29
|<"collection3 = db[\"user3\"]","","class Toilet(BaseModel):","    room: int","    state: int","","","@app.post(\"/toilet\")","def update_input(toilet : Toilet):","    x= jsonable_encoder(toilet)","    print(toilet.room)","    print(toilet.state)","    if (toilet.room == 1):","        toiletroom = collection1","    if (toilet.room == 2):","        toiletroom = collection2","    if (toilet.room == 3):","        toiletroom = collection3","    ","    timein = time.time()","",>29
|<"    if (toilet.state == 1):","        fromdatabase = toiletroom.find_one({\"room\" : toilet.room},{\"_id\":0})","        print(timein)","        query = {\"room\": toilet.room , \"state\": toilet.state, \"timein\": timein ,\"timeall\" : fromdatabase[\"timeall\"] , \"people\": fromdatabase[\"people\"]} ","        filter = {\"room\":toilet.room}","        newvalue = {\"$set\": query}","        toiletroom.update_one(filter,newvalue)","    elif (toilet.state == 0):",>82
|<"        fromdatabase = toiletroom.find_one({\"room\" : toilet.room},{\"_id\":0})","        print(fromdatabase[\"timeall\"])","        query = {\"room\": toilet.room , \"state\": toilet.state, \"timein\": timein ,\"timeall\" : fromdatabase[\"timeall\"] + timein - fromdatabase[\"timein\"]  , \"people\": fromdatabase[\"people\"]+1} ","        filter = {\"room\":toilet.room}"

# File marks:
'0  85  3  ~/miniproject.py
|4,48,85,3,1644662851,"~/miniproject.py"
'1  87  0  ~/miniproject.py
|4,49,87,0,1644662619,"~/miniproject.py"
'2  87  0  ~/miniproject.py
|4,50,87,0,1644662619,"~/miniproject.py"
'3  1  0  ~/miniproject.py
|4,51,1,0,1644662523,"~/miniproject.py"
'4  69  0  ~/miniproject.py
|4,52,69,0,1644662523,"~/miniproject.py"
'5  1  0  ~/miniproject.py
|4,53,1,0,1644662523,"~/miniproject.py"
'6  69  0  ~/miniproject.py
|4,54,69,0,1644662523,"~/miniproject.py"
'7  1  23  ~/miniproject.py
|4,55,1,23,1644662300,"~/miniproject.py"
'8  1  23  ~/miniproject.py
|4,56,1,23,1644662300,"~/miniproject.py"
'9  1  23  ~/miniproject.py
|4,57,1,23,1644662300,"~/miniproject.py"

# Jumplist (newest first):
-'  85  3  ~/miniproject.py
|4,39,85,3,1644662851,"~/miniproject.py"
-'  87  0  ~/miniproject.py
|4,39,87,0,1644662827,"~/miniproject.py"
-'  87  0  ~/miniproject.py
|4,39,87,0,1644662619,"~/miniproject.py"
-'  1  0  ~/miniproject.py
|4,39,1,0,1644662609,"~/miniproject.py"
-'  1  0  ~/miniproject.py
|4,39,1,0,1644662609,"~/miniproject.py"
-'  69  0  ~/miniproject.py
|4,39,69,0,1644662523,"~/miniproject.py"
-'  69  0  ~/miniproject.py
|4,39,69,0,1644662523,"~/miniproject.py"
-'  1  23  ~/miniproject.py
|4,39,1,23,1644662465,"~/miniproject.py"
-'  53  23  ~/miniproject.py
|4,39,53,23,1644662300,"~/miniproject.py"
-'  53  23  ~/miniproject.py
|4,39,53,23,1644662300,"~/miniproject.py"
-'  25  7  ~/miniproject.py
|4,39,25,7,1644662279,"~/miniproject.py"
-'  25  7  ~/miniproject.py
|4,39,25,7,1644662279,"~/miniproject.py"
-'  25  7  ~/miniproject.py
|4,39,25,7,1644662141,"~/miniproject.py"
-'  52  45  ~/miniproject.py
|4,39,52,45,1644662120,"~/miniproject.py"
-'  52  45  ~/miniproject.py
|4,39,52,45,1644662120,"~/miniproject.py"
-'  52  45  ~/miniproject.py
|4,39,52,45,1644662120,"~/miniproject.py"
-'  52  45  ~/miniproject.py
|4,39,52,45,1644661315,"~/miniproject.py"
-'  1  0  ~/miniproject.py
|4,39,1,0,1644661298,"~/miniproject.py"
-'  1  0  ~/miniproject.py
|4,39,1,0,1644661298,"~/miniproject.py"
-'  1  0  ~/miniproject.py
|4,39,1,0,1644661298,"~/miniproject.py"

# History of marks within files (newest to oldest):

> ~/miniproject.py
	*	1644662848	0
	"	85	3
	^	39	9
	.	39	8
	+	1	46
	+	1	7
	+	1	21
	+	1	31
	+	86	4
	+	39	8
